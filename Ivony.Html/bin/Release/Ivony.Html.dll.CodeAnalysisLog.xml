<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="Ivony.Html.Styles">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Ivony.Html.Styles”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\bin\Release\Ivony.Html.dll">
   <Modules>
    <Module Name="ivony.html.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">用强名称密钥对 'Ivony.Html.dll' 进行签名。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">使用 CLSCompliant(true)来标记 'Ivony.Html.dll'，因为它公开外部可见的类型。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Ivony.Html">
       <Types>
        <Type Name="AttributeExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Attribute(Ivony.Html.IHtmlElement,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="29">在外部可见方法 'AttributeExtensions.Attribute(this IHtmlElement, string)' 中，请在使用参数“element”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.Func`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="122">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Func&lt;string, string&gt;)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="122">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Func&lt;string, string&gt;)' 中，请在使用参数“evaluator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="57">更改成员名或参数名 'value'，使两者能相互区分。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="57">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, string)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="71">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, string, string)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.String,System.Text.RegularExpressions.MatchEvaluator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="110">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, string, MatchEvaluator)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.Text.RegularExpressions.Regex,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="84">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Regex, string)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="84">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Regex, string)' 中，请在使用参数“pattern”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(Ivony.Html.IHtmlAttribute,System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.MatchEvaluator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="97">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Regex, MatchEvaluator)' 中，请在使用参数“attribute”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="97">在外部可见方法 'AttributeExtensions.Value(this IHtmlAttribute, Regex, MatchEvaluator)' 中，请在使用参数“pattern”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributeExtensions+AttributeSetValueSetter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'AttributeExtensions.AttributeSetValueSetter'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_attributeName" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'AttributeExtensions.AttributeSetValueSetter._attributeName' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="385">更改成员名或参数名 'value'，使两者能相互区分。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributeExtensions+AttributeValueSetter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'AttributeExtensions.AttributeValueSetter'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Attribute" Kind="Property" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Attribute()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="170">'AttributeExtensions.AttributeValueSetter.Attribute.get()' 似乎没有上游 public 或 protected 调用方。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Element" Kind="Property" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Element()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="165">'AttributeExtensions.AttributeValueSetter.Element.get()' 似乎没有上游 public 或 protected 调用方。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Value(System.Func`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="274">在外部可见方法 'AttributeExtensions.AttributeValueSetter.Value(Func&lt;string, string&gt;)' 中，请在使用参数“evaluator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(System.Func`3&lt;Ivony.Html.IHtmlElement,System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="286">在外部可见方法 'AttributeExtensions.AttributeValueSetter.Value(Func&lt;IHtmlElement, string, string&gt;)' 中，请在使用参数“evaluator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="210">更改成员名或参数名 'value'，使两者能相互区分。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(System.Text.RegularExpressions.Regex,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="236">在外部可见方法 'AttributeExtensions.AttributeValueSetter.Value(Regex, string)' 中，请在使用参数“pattern”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value(System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.MatchEvaluator)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="AttributeExtensions.cs" Line="249">在外部可见方法 'AttributeExtensions.AttributeValueSetter.Value(Regex, MatchEvaluator)' 中，请在使用参数“pattern”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContentExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateElementHtml(Ivony.Html.IHtmlElement)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="127">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'ContentExtensions.GenerateElementHtml(IHtmlElement)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.Linq.Enumerable.Contains&lt;System.String&gt;1(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="124">'ContentExtensions.GenerateElementHtml(IHtmlElement)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Enumerable.Contains&lt;string&gt;(this IEnumerable&lt;string&gt;, string, IEqualityComparer&lt;string&gt;)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateHtml(Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="96">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'ContentExtensions.GenerateHtml(IHtmlNode)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InnerHtml(Ivony.Html.IHtmlContainer,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="39">在外部可见方法 'ContentExtensions.InnerHtml(this IHtmlContainer, bool)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InnerText(Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Linq.Enumerable.Contains&lt;System.String&gt;1(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="195">'ContentExtensions.InnerText(this IHtmlNode)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Enumerable.Contains&lt;string&gt;(this IEnumerable&lt;string&gt;, string, IEqualityComparer&lt;string&gt;)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsWhiteSpace(Ivony.Html.IHtmlTextNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="212">在外部可见方法 'ContentExtensions.IsWhiteSpace(this IHtmlTextNode)' 中，请在使用参数“textNode”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterHtml(Ivony.Html.IHtmlNode,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="66">在外部可见方法 'ContentExtensions.OuterHtml(this IHtmlNode, bool)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Render(Ivony.Html.IHtmlDocument)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="222">由于 'StringWriter.StringWriter()' 的行为可能会因当前用户的区域设置不同而不同，请将 'ContentExtensions.Render(this IHtmlDocument)' 中的此调用替换为对 'StringWriter.StringWriter(IFormatProvider)' 的调用。如果 'StringWriter.StringWriter(IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="222">在方法 'ContentExtensions.Render(this IHtmlDocument)' 中，请在对 'writer' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Render(Ivony.Html.IHtmlDocument,System.IO.TextWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="ContentExtensions.cs" Line="231">考虑将 'ContentExtensions.Render(this IHtmlDocument, TextWriter)' 中参数 'document' 的类型从 'IHtmlDocument' 改为其基类型 'IHtmlContainer'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DocumentExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EnsureAllocated(Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DocumentExtensions.cs" Line="147">在外部可见方法 'DocumentExtensions.EnsureAllocated(this IHtmlNode)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetElementById(Ivony.Html.IHtmlDocument,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DocumentExtensions.cs" Line="28">考虑将 'DocumentExtensions.GetElementById(this IHtmlDocument, string)' 中参数 'document' 的类型从 'IHtmlDocument' 改为其基类型 'IHtmlContainer'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetElementName(Ivony.Html.IHtmlElement)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DocumentExtensions.cs" Line="164">在方法 'DocumentExtensions.GetElementName(IHtmlElement)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Identity(Ivony.Html.IHtmlElement,System.Boolean,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DocumentExtensions.cs" Line="66">在外部可见方法 'DocumentExtensions.Identity(this IHtmlElement, bool, bool)' 中，请在使用参数“element”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DomExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AppendTo(Ivony.Html.IFreeComment,Ivony.Html.IHtmlContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="123">在外部可见方法 'DomExtensions.AppendTo(this IFreeComment, IHtmlContainer)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendTo(Ivony.Html.IFreeElement,Ivony.Html.IHtmlContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="89">在外部可见方法 'DomExtensions.AppendTo(this IFreeElement, IHtmlContainer)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendTo(Ivony.Html.IFreeTextNode,Ivony.Html.IHtmlContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="106">在外部可见方法 'DomExtensions.AppendTo(this IFreeTextNode, IHtmlContainer)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearNodes(Ivony.Html.IHtmlElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="494">考虑将 'DomExtensions.ClearNodes(this IHtmlElement)' 中参数 'element' 的类型从 'IHtmlElement' 改为其基类型 'IHtmlContainer'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Insert`1(!!0,System.Int32,Ivony.Html.IFreeNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="53">在外部可见方法 'DomExtensions.Insert&lt;TContainer&gt;(this TContainer, int, IFreeNode)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertTo(Ivony.Html.IFreeComment,Ivony.Html.IHtmlContainer,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="112">考虑将 'DomExtensions.InsertTo(this IFreeComment, IHtmlContainer, int)' 中参数 'comment' 的类型从 'IFreeComment' 改为其基类型 'IFreeNode'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="114">在外部可见方法 'DomExtensions.InsertTo(this IFreeComment, IHtmlContainer, int)' 中，请在使用参数“comment”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="112">在外部可见方法 'DomExtensions.InsertTo(this IFreeComment, IHtmlContainer, int)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertTo(Ivony.Html.IFreeElement,Ivony.Html.IHtmlContainer,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="72">考虑将 'DomExtensions.InsertTo(this IFreeElement, IHtmlContainer, int)' 中参数 'element' 的类型从 'IFreeElement' 改为其基类型 'IFreeNode'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="74">在外部可见方法 'DomExtensions.InsertTo(this IFreeElement, IHtmlContainer, int)' 中，请在使用参数“element”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="72">在外部可见方法 'DomExtensions.InsertTo(this IFreeElement, IHtmlContainer, int)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertTo(Ivony.Html.IFreeTextNode,Ivony.Html.IHtmlContainer,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="95">考虑将 'DomExtensions.InsertTo(this IFreeTextNode, IHtmlContainer, int)' 中参数 'textNode' 的类型从 'IFreeTextNode' 改为其基类型 'IFreeNode'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="97">在外部可见方法 'DomExtensions.InsertTo(this IFreeTextNode, IHtmlContainer, int)' 中，请在使用参数“textNode”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="95">在外部可见方法 'DomExtensions.InsertTo(this IFreeTextNode, IHtmlContainer, int)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSafeBindable(Ivony.Html.IHtmlElement)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Linq.Enumerable.Contains&lt;System.String&gt;1(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="627">'DomExtensions.IsSafeBindable(this IHtmlElement)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Enumerable.Contains&lt;string&gt;(this IEnumerable&lt;string&gt;, string, IEqualityComparer&lt;string&gt;)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeCopy(Ivony.Html.IHtmlNodeFactory,Ivony.Html.IHtmlTextNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="398">在外部可见方法 'DomExtensions.MakeCopy(this IHtmlNodeFactory, IHtmlTextNode)' 中，请在使用参数“factory”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="398">在外部可见方法 'DomExtensions.MakeCopy(this IHtmlNodeFactory, IHtmlTextNode)' 中，请在使用参数“textNode”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeFragment(Ivony.Html.IHtmlNodeFactory,Ivony.Html.IHtmlContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="413">在外部可见方法 'DomExtensions.MakeFragment(this IHtmlNodeFactory, IHtmlContainer)' 中，请在使用参数“container”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PathOf(Ivony.Html.IHtmlElement)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="645">在外部可见方法 'DomExtensions.PathOf(this IHtmlElement)' 中，请在使用参数“element”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Replace(Ivony.Html.IHtmlNode,Ivony.Html.IFreeNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="137">在外部可见方法 'DomExtensions.Replace(this IHtmlNode, IFreeNode)' 中，请在使用参数“oldNode”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="144">在外部可见方法 'DomExtensions.Replace(this IHtmlNode, IFreeNode)' 中，请在使用参数“newNode”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceChildsWithHtml(Ivony.Html.IHtmlElement,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Linq.Enumerable.Contains&lt;System.String&gt;1(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="473">'DomExtensions.ReplaceChildsWithHtml(this IHtmlElement, string)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Enumerable.Contains&lt;string&gt;(this IEnumerable&lt;string&gt;, string, IEqualityComparer&lt;string&gt;)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceChildsWithText(Ivony.Html.IHtmlElement,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Linq.Enumerable.Contains&lt;System.String&gt;1(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="440">'DomExtensions.ReplaceChildsWithText(this IHtmlElement, string)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Enumerable.Contains&lt;string&gt;(this IEnumerable&lt;string&gt;, string, IEqualityComparer&lt;string&gt;)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceCopy(Ivony.Html.IHtmlNode,Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="DomExtensions.cs" Line="222">在外部可见方法 'DomExtensions.ReplaceCopy(this IHtmlNode, IHtmlNode)' 中，请在使用参数“oldNode”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumerableWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">'EnumerableWrapper' 似乎是非泛型的强类型集合。向 IEnumerable&lt;T&gt; 的实例(其中 T 是 'EnumerableWrapper' 的基础元素类型)中添加一个实现。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetEnumerable()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">如果可行，请将 'EnumerableWrapper.GetEnumerable()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerable.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="EnumerableWrapper.cs" Line="17">将 'EnumerableWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IEnumerable.GetEnumerator()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumerableWrapper`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetEnumerable()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">如果可行，请将 'EnumerableWrapper&lt;T&gt;.GetEnumerable()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.Generic.IEnumerable`1&lt;!0&gt;.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="EnumerableWrapper.cs" Line="29">将 'EnumerableWrapper&lt;T&gt;' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IEnumerable&lt;T&gt;.GetEnumerator()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerable.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="EnumerableWrapper.cs" Line="34">将 'EnumerableWrapper&lt;T&gt;' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IEnumerable.GetEnumerator()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Html5DraftSpecification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">由于类型 'Html5DraftSpecification' 仅包含“static”(在 Visual Basic 中为“Shared”)成员，因此添加默认私有构造函数可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#FlowContent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'Html5DraftSpecification.FlowContent' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'Html5DraftSpecification.IContentKind' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MetadataContent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'Html5DraftSpecification.MetadataContent' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'Html5DraftSpecification.IContentKind' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Html5DraftSpecification+FlowContentKind" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#IsBelong(Ivony.Html.IHtmlNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Html5DraftSpecification.cs" Line="71">在方法 'Html5DraftSpecification.FlowContentKind.IsBelong(IHtmlNode)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Html5DraftSpecification+IContentKind" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'Html5DraftSpecification.IContentKind'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HtmlCssSelector" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#attributeSelectorRegex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="attribute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlCssSelector.attributeSelectorRegex' 中“attribute”的大小写，将其改为“Attribute”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSelector(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="82">从未使用 'HtmlCssSelector.CreateSelector(string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cssSelectorRegex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="css" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlCssSelector.cssSelectorRegex' 中“css”的大小写，将其改为“Css”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#elementSelectorRegex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="element" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlCssSelector.elementSelectorRegex' 中“element”的大小写，将其改为“Element”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extraRegex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="extra" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlCssSelector.extraRegex' 中“extra”的大小写，将其改为“Extra”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+AttributeSelector" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="468">由于 'string.EndsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.AttributeSelector.AttributeSelector()' 中的此调用替换为对 'string.EndsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.EndsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="467">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.AttributeSelector.AttributeSelector()' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#exp" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'HtmlCssSelector.AttributeSelector.exp' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="525">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.AttributeSelector.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="523">由于 'string.Format(string, object, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.AttributeSelector.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+ElementSelector" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="383">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.ElementSelector.ElementSelector(string)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="386">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.ElementSelector.ElementSelector(string)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Filter(System.Collections.Generic.IEnumerable`1&lt;Ivony.Html.IHtmlElement&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="404">'HtmlCssSelector.ElementSelector.Filter(IEnumerable&lt;IHtmlElement&gt;)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TagName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_TagName()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="444">'HtmlCssSelector.ElementSelector.TagName.get()' 似乎没有上游 public 或 protected 调用方。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="440">由于 'string.ToUpper()' 的行为可能因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.ElementSelector.ToString()' 中的此调用替换为对 'string.ToUpper(CultureInfo)' 的调用。如果要向用户显示 'string.ToUpper(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="440">由于 'string.Format(string, object, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.ElementSelector.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+PartSelector" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Allows(Ivony.Html.IHtmlElement,Ivony.Html.IHtmlContainer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="331">使用“String.IsNullOrEmpty”调用来替换 'HtmlCssSelector.PartSelector.Allows(IHtmlElement, IHtmlContainer)' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="350">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PartSelector.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="353">由于 'string.Format(string, object, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PartSelector.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="349">使用“String.IsNullOrEmpty”调用来替换 'HtmlCssSelector.PartSelector.ToString()' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+PseudoClassFactory" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HtmlCssSelector.PseudoClassFactory' 是显然没有实例化过的内部类。如果是这样，请从程序集内移除该代码。如果此内部类只用于包含静态方法，请考虑添加私有构造函数，以阻止编译器生成默认构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Create(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="560">在方法 'HtmlCssSelector.PseudoClassFactory.Create(string, string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="576">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.Create(string, string, string)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+PseudoClassFactory+CountPseudoClass" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="768">在方法 'HtmlCssSelector.PseudoClassFactory.CountPseudoClass.CountPseudoClass(string, string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="776">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.CountPseudoClass.CountPseudoClass(string, string, string)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_args" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'HtmlCssSelector.PseudoClassFactory.CountPseudoClass._args' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_expression" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'HtmlCssSelector.PseudoClassFactory.CountPseudoClass._expression' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+PseudoClassFactory+NthPseudoClass" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="606">在方法 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.NthPseudoClass(string, string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="623">在方法 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.NthPseudoClass(string, string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="659">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.NthPseudoClass(string, string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="663">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.NthPseudoClass(string, string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="614">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.NthPseudoClass(string, string, string)' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Check(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="722">'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.Check(int)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#exp" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.exp' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="741">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.ToString()' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="744">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.ToString()' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="746">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.ToString()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="为格式化方法提高正确的参数" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Name="MissingArgument" Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="746">方法 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.ToString()' 调用 'string.Format(string, object)' 并且不为格式项 "{1}" 提供参数。提供的格式字符串为:“":nth-child({1})"”</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="746">方法 'HtmlCssSelector.PseudoClassFactory.NthPseudoClass.ToString()' 调用 'string.Format(string, object)' 并且不为参数 "1" 提供格式项。提供的格式字符串为:“":nth-child({1})"”</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlCssSelector+TraceEnumerable`1+Enumerator" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(Ivony.Html.HtmlCssSelector,System.Collections.Generic.IEnumerator`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="210">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.TraceEnumerable&lt;T&gt;.Enumerator.Enumerator(HtmlCssSelector, IEnumerator&lt;T&gt;)' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerator.Reset()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="247">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.TraceEnumerable&lt;T&gt;.Enumerator.IEnumerator.Reset()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlCssSelector.cs" Line="228">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlCssSelector.TraceEnumerable&lt;T&gt;.Enumerator.IDisposable.Dispose()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlDocumentWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Ivony.Html.IHtmlContainer.Nodes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlDocumentWrapper.cs" Line="40">将 'HtmlDocumentWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlContainer.Nodes()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDocument.DocumentDeclaration" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDocument.get_DocumentDeclaration()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlDocumentWrapper.cs" Line="26">将 'HtmlDocumentWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDocument.DocumentDeclaration.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDocument.GetNodeFactory()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlDocumentWrapper.cs" Line="31">将 'HtmlDocumentWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDocument.GetNodeFactory()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.RawObject" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_RawObject()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlDocumentWrapper.cs" Line="49">将 'HtmlDocumentWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.RawObject.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.SyncRoot" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_SyncRoot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlDocumentWrapper.cs" Line="59">将 'HtmlDocumentWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.SyncRoot.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlElementWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Ivony.Html.IHtmlContainer.Nodes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlElementWrapper.cs" Line="42">将 'HtmlElementWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlContainer.Nodes()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlElement.AddAttribute(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlElementWrapper.cs" Line="33">将 'HtmlElementWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlElement.AddAttribute(string)' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlElement.Attributes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlElementWrapper.cs" Line="28">将 'HtmlElementWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlElement.Attributes()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlElement.Name" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlElement.get_Name()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlElementWrapper.cs" Line="23">将 'HtmlElementWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlElement.Name.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlEncoding" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">由于类型 'HtmlEncoding' 仅包含“static”(在 Visual Basic 中为“Shared”)成员，因此添加默认私有构造函数可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#HtmlAttributeEncode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="170">由于 'StringWriter.StringWriter()' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlEncoding.HtmlAttributeEncode(string)' 中的此调用替换为对 'StringWriter.StringWriter(IFormatProvider)' 的调用。如果 'StringWriter.StringWriter(IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HtmlDecode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="80">由于 'StringWriter.StringWriter()' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlEncoding.HtmlDecode(string)' 中的此调用替换为对 'StringWriter.StringWriter(IFormatProvider)' 的调用。如果 'StringWriter.StringWriter(IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HtmlDecode(System.String,System.IO.TextWriter)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="128">'HtmlEncoding.HtmlDecode(string, TextWriter)' 调用 'ushort.TryParse(string, NumberStyles, IFormatProvider, out ushort)' 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="130">'HtmlEncoding.HtmlDecode(string, TextWriter)' 调用 'ushort.TryParse(string, NumberStyles, IFormatProvider, out ushort)' 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="124">由于 'string.StartsWith(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlEncoding.HtmlDecode(string, TextWriter)' 中的此调用替换为对 'string.StartsWith(string, StringComparison)' 的调用。如果要向用户显示 'string.StartsWith(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HtmlEncode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlEncoding.cs" Line="16">由于 'StringWriter.StringWriter()' 的行为可能会因当前用户的区域设置不同而不同，请将 'HtmlEncoding.HtmlEncode(string)' 中的此调用替换为对 'StringWriter.StringWriter(IFormatProvider)' 的调用。如果 'StringWriter.StringWriter(IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlFragment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Ivony.Html.IHtmlContainer.Nodes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlFragment.cs" Line="223">将 'HtmlFragment' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlContainer.Nodes()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.Document" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_Document()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlFragment.cs" Line="213">将 'HtmlFragment' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.Document.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.RawObject" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_RawObject()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlFragment.cs" Line="208">将 'HtmlFragment' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.RawObject.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlNodeWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Ivony.Html.IHtmlDomObject.Document" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_Document()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="38">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.Document.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.RawObject" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_RawObject()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="28">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.RawObject.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlDomObject.SyncRoot" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlDomObject.get_SyncRoot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="48">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlDomObject.SyncRoot.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlNode.Container" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlNode.get_Container()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="23">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlNode.Container.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlNode.RawHtml" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Ivony.Html.IHtmlNode.get_RawHtml()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="43">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlNode.RawHtml.get()' 的功能且对派生类可见的新方法。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Ivony.Html.IHtmlNode.Remove()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlNodeWrapper.cs" Line="33">将 'HtmlNodeWrapper' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IHtmlNode.Remove()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlSpecification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_htmlEntityEndingChars" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'HtmlSpecification._htmlEntityEndingChars' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blockElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.blockElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="block" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.blockElements' 中“block”的大小写，将其改为“Block”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cdataTags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.cdataTags' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="cdata" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.cdataTags' 中“cdata”的大小写，将其改为“Cdata”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#flowElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.flowElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="flow" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.flowElements' 中“flow”的大小写，将其改为“Flow”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fontstyleElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.fontstyleElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="fontstyle" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.fontstyleElements' 中“fontstyle”的大小写，将其改为“Fontstyle”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#formcontrolElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.formcontrolElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="formcontrol" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.formcontrolElements' 中“formcontrol”的大小写，将其改为“Formcontrol”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#headingElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.headingElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="heading" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.headingElements' 中“heading”的大小写，将其改为“Heading”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImmediatelyClose(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlSpecification.cs" Line="58">在方法 'HtmlSpecification.ImmediatelyClose(string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlSpecification.cs" Line="59">在方法 'HtmlSpecification.ImmediatelyClose(string, string)' 中，将对 'string.ToLowerInvariant()' 的调用替换为 String.ToUpperInvariant()。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlSpecification.cs" Line="58">在外部可见方法 'HtmlSpecification.ImmediatelyClose(string, string)' 中，请在使用参数“openTag”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="HtmlSpecification.cs" Line="59">在外部可见方法 'HtmlSpecification.ImmediatelyClose(string, string)' 中，请在使用参数“nextTag”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inlineElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.inlineElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="inline" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.inlineElements' 中“inline”的大小写，将其改为“Inline”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.listElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="list" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.listElements' 中“list”的大小写，将其改为“List”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#optionalCloseTags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.optionalCloseTags' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="optional" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.optionalCloseTags' 中“optional”的大小写，将其改为“Optional”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#phrasElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.phrasElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="phras" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.phrasElements' 中“phras”的大小写，将其改为“Phras”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#preformatedElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.preformatedElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="preformated" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.preformatedElements' 中“preformated”的大小写，将其改为“Preformated”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selfCloseTags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.selfCloseTags' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="self" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.selfCloseTags' 中“self”的大小写，将其改为“Self”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#specialElements" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">从 'HtmlSpecification.specialElements' 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 'ICollection&lt;string&gt;' 已经是不可变的，则请排除此消息。</Issue>
            </Message>
            <Message Id="special" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'HtmlSpecification.specialElements' 中“special”的大小写，将其改为“Special”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IHtmlDocument" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetNodeFactory()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">如果可行，请将 'IHtmlDocument.GetNodeFactory()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IHtmlProvider`5" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveParametersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1005" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
           <Issue Certainty="85" Level="Error">考虑使用 'IHtmlProvider&lt;TDocument, TElement, TTextNode, TComment, TContainer&gt;' 带有的类型参数不超过两个的设计。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NavigateExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Elements(Ivony.Html.IHtmlContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="NavigateExtensions.cs" Line="37">在外部可见方法 'NavigateExtensions.Elements(this IHtmlContainer)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parent(Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="NavigateExtensions.cs" Line="26">在外部可见方法 'NavigateExtensions.Parent(this IHtmlNode)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SiblingNodes(Ivony.Html.IHtmlNode)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Extensions" File="NavigateExtensions.cs" Line="160">在外部可见方法 'NavigateExtensions.SiblingNodes(this IHtmlNode)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Regulars" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="15">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="16">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="18">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="19">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="31">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="34">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="37">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="21">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="22">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="24">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="25">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="27">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="28">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="36">由于 'string.Format(string, object, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'Regulars.Regulars()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#attributeExpressionPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="attribute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.attributeExpressionPattern' 中“attribute”的大小写，将其改为“Attribute”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#attributeExpressionPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="attribute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.attributeExpressionPatternNoGroup' 中“attribute”的大小写，将其改为“Attribute”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cssSelectorPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="css" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.cssSelectorPattern' 中“css”的大小写，将其改为“Css”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cssSelectorPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="css" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.cssSelectorPatternNoGroup' 中“css”的大小写，将其改为“Css”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#decimalPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="decimal" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.decimalPattern' 中“decimal”的大小写，将其改为“Decimal”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dquoteTextPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dquote" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.dquoteTextPattern' 中“dquote”的大小写，将其改为“Dquote”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#elementExpressionPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="element" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.elementExpressionPattern' 中“element”的大小写，将其改为“Element”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#elementExpressionPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="element" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.elementExpressionPatternNoGroup' 中“element”的大小写，将其改为“Element”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extraExpressionPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="extra" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.extraExpressionPattern' 中“extra”的大小写，将其改为“Extra”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#extraExpressionPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="extra" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.extraExpressionPatternNoGroup' 中“extra”的大小写，将其改为“Extra”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#integerPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="integer" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.integerPattern' 中“integer”的大小写，将其改为“Integer”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pseudoClassPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="pseudo" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.pseudoClassPattern' 中“pseudo”的大小写，将其改为“Pseudo”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pseudoClassPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="pseudo" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.pseudoClassPatternNoGroup' 中“pseudo”的大小写，将其改为“Pseudo”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#quoteTextPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="quote" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.quoteTextPattern' 中“quote”的大小写，将其改为“Quote”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#relativeExpressionPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="relative" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.relativeExpressionPattern' 中“relative”的大小写，将其改为“Relative”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#relativeExpressionPatternNoGroup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="relative" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.relativeExpressionPatternNoGroup' 中“relative”的大小写，将其改为“Relative”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReplaceEscape(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html" File="Regulars.cs" Line="42">在外部可见方法 'Regulars.ReplaceEscape(string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#squoteTextPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="squote" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.squoteTextPattern' 中“squote”的大小写，将其改为“Squote”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#styleRulePattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="style" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.styleRulePattern' 中“style”的大小写，将其改为“Style”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#styleSettingPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="style" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.styleSettingPattern' 中“style”的大小写，将其改为“Style”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#styleSheetPattern" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="style" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'Regulars.styleSheetPattern' 中“style”的大小写，将其改为“Style”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Ivony.Html.Styles">
       <Types>
        <Type Name="CssStyle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="36">由于 'string.Format(string, object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'CssStyle.CssStyle()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="39">'CssStyle.CssStyle()' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Hashtable.Hashtable(IEqualityComparer)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Ivony.Html.IHtmlElement)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="39">'CssStyle.CssStyle(IHtmlElement)' 将“StringComparer.InvariantCultureIgnoreCase”作为“StringComparer”参数传递给 'Hashtable.Hashtable(IEqualityComparer)'。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="62">重命名虚拟/接口成员 'CssStyle.Get(string)'，使它不再与保留的语言关键字“Get”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStyleExpression(System.Collections.Hashtable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="104">从未使用 'CssStyle.GetStyleExpression(Hashtable)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Set(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Set" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2010-12-07 01:40:07Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Ivony\Documents\Visual Studio 2010\Projects\Jumony\Ivony.Html\Styles" File="CssStyle.cs" Line="67">重命名虚拟/接口成员 'CssStyle.Set(string, string)'，使它不再与保留的语言关键字“Set”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>程序集应具有有效的强名称</Name>
   <Description>程序集没有强名称，强名称无效，或者强名称只有经过计算机配置后才有效。不应部署处于这种状态的程序集。出现这种情况最常见原因有: 1) 对程序集进行签名后，修改了该程序集的内容；2) 签名过程失败；3) 延迟了程序集签名；4) 存在一个允许检查通过(原本不应通过)的注册表项。</Description>
   <Resolution Name="NoStrongName">用强名称密钥对 {0} 进行签名。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveParametersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1005">
   <Name>避免泛型类型的参数过多</Name>
   <Description>避免泛型类型的类型参数在两个以上，因为如果类型的参数列表很长，用户将难以理解其中各项参数的含义。</Description>
   <Resolution Name="Default">考虑使用 {0} 带有的类型参数不超过两个的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182129(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>避免使用类型极少的命名空间</Name>
   <Description>命名空间一般应具有五个以上的类型。</Description>
   <Resolution Name="Default">考虑将“{0}”中定义的类型与另一个命名空间合并。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>避免使用未调用的私有代码</Name>
   <Description>存在对外部不可见的未调用代码，该代码不是已知的运行时入口点。如果错误地引发此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">{0} 似乎没有上游 public 或 protected 调用方。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>避免未实例化的内部类</Name>
   <Description>检测到显然从未实例化过的内部类。此规则不会尝试检测后期绑定创建，并且，如果某一类型的实例都是以这种方法(例如，通过 Activator.CreateInstance 或将类型作为参数传递给 TypeConverter 构造函数)创建的，则将产生误报。</Description>
   <Resolution Name="Default">{0} 是显然没有实例化过的内部类。如果是这样，请从程序集内移除该代码。如果此内部类只用于包含静态方法，请考虑添加私有构造函数，以阻止编译器生成默认构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>避免未使用的私有字段</Name>
   <Description>检测到程序集内有似乎未访问过的私有字段。如果错误地引发了此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">似乎从未使用过字段 {0} 或只对它进行过赋值。请使用此字段或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
   <Name>集合应实现泛型接口</Name>
   <Description>非泛型强类型集合应实现泛型集合接口之一。这样可以更好地将集合与泛型 API 集成。</Description>
   <Resolution Name="Default">{0} 似乎是非泛型的强类型集合。向 {1}&lt;T&gt; 的实例(其中 T 是 {0} 的基础元素类型)中添加一个实现。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182132(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>考虑将基类型作为参数传递</Name>
   <Description>如果仅使用参数的基类中的方法和属性，则将基类型用作方法的参数可以提高这些方法的重复利用率。例如，如果仅调用 Stream.Read()，则使用 Stream 而不是 FileStream 作为参数，这可以使该方法适用于所有类型的流，而不仅仅适用于 File 流。</Description>
   <Resolution Name="Default">考虑将 {1} 中参数 {0} 的类型从 {2} 改为其基类型 {3}。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>不要声明只读可变引用类型</Name>
   <Description>可变引用类型的只读声明不会阻止对字段的实例数据进行修改。例如，由于使用只读引用可以修改 StringBuilder 封装的数据，因此只读 StringBuilder 字段声明毫无意义。</Description>
   <Resolution Name="Default">从 {0} 中移除只读的指定内容或将该字段改为不可变的引用类型的字段。如果引用类型 {1} 已经是不可变的，则请排除此消息。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>不要忽略方法结果</Name>
   <Description>对于返回新的字符串实例的方法，应将其结果赋予变量并随后使用。如果未将创建新对象的方法(如 String.ToLower())的结果赋给变量，则该调用便浪费了。</Description>
   <Resolution Name="TryParse">{0} 调用 {1} 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>不要引发保留的异常类型</Name>
   <Description>用户代码不应创建和引发某些类型的异常，即属于运行时保留的异常类型或太通用的异常类型。太通用的异常类型包括 Exception、SystemException 和 ApplicationException。运行时保留的异常类型包括 ThreadAbortException、OutOfMemoryException、ExecutionEngineException 和 IndexOutOfRangeException。</Description>
   <Resolution Name="TooGeneric">{0} 创建类型为 {1} 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>标识符的大小写应当正确</Name>
   <Description>类型、命名空间和成员标识符应采用 Pascal 大小写格式。参数标识符应采用 Camel 大小写格式。这些标识符内由两个字母组成的首字母缩略词应全部大写，例如，应采用 System.IO，而不是 System.Io。由三个或更多个字母组成的首字母缩略词应采用 Pascal 大小写格式，例如，应采用 System.Xml，而不是 System.XML。Pascal 大小写格式约定每个单词的首字母大写，如 BackColor。Camel 大小写格式约定第一个单词的首字母小写，所有后续单词的首字母都大写，如 backgroundColor。尽管有些由两个字母组成的首字母缩略词习惯采用不完全大写形式，但不能因此而排斥此规则。例如，“DbConnection”很常见，但并不正确，应采用 DBConnection。为了与现有的非托管符号方案兼容，可能需要违反此规则。但一般来说，这些符号在使用它们的程序集之外不可见。</Description>
   <Resolution Name="Member">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>标识符不应与关键字冲突</Name>
   <Description>应避免使用与保留的语言关键字冲突的标识符。如果使用保留的语言关键字作为标识符，则会使其他语言的使用者很难使用您的 API。</Description>
   <Resolution Name="Member">重命名虚拟/接口成员 {0}，使它不再与保留的语言关键字“{1}”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>接口方法应可由子类型调用</Name>
   <Description>定义的显式方法实现具有私有可访问性。除非基类提供了具有相应可访问性的备用方法，否则从具有显式方法实现的类派生，并选择在类中重新声明它们的类不能调入基类实现。如果重写的基类方法已被显式接口实现所隐藏，则为了调入基类实现，派生类必须将基指针强制转换为相关接口。但是，通过此引用调用基类实现时，实际调用的将是派生类实现，这会导致递归调用，并最终导致堆栈溢出。</Description>
   <Resolution Name="Default">将 {0} 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 {1} 的功能且对派生类可见的新方法。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>用 CLSCompliantAttribute 标记程序集</Name>
   <Description>程序集应使用 CLSCompliant 特性显式说明其 ClS 遵从性。没有此特性的程序集不符合 CLS。即使程序集、模块或类型的某些部分不符合 CLS，这些程序集、模块或类型本身也可以是符合 CLS 的。适用下列规则: 1) 如果元素标记为 CLSCompliant，则所有不符合 CLS 的成员都必须有参数设置为 false 的 CLSCompliant 特性。2) 对于每个不符合 CLS 的成员，都必须提供一个相应的符合 CLS 的备选成员。</Description>
   <Resolution Name="Default">使用 CLSCompliant(true)来标记 {0}，因为它公开外部可见的类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>将成员标记为 static</Name>
   <Description>不访问实例数据或调用实例方法的方法可标记为 Static (在 Visual Basic 中为 Shared)。这样，编译器会向这些成员发出非虚拟调用站点，以防止在运行时对每个调用进行旨在确保当前对象指针为非 null 的检查。这样可以使对性能比较敏感的代码获得显著的性能提升。在某些情况下，无法访问当前对象实例表明存在正确性问题。</Description>
   <Resolution Name="Default">从未使用 {0} 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>嵌套类型不应是可见的</Name>
   <Description>不要使用 public、protected 或 protected internal (Protected Friend)等嵌套类型作为类型的分组方式。使用命名空间实现此目的。嵌套类型仅在极为有限的情况下才是最佳设计。此外，不是所有的用户都能清楚地了解嵌套类型成员的可访问性。枚举数不受此规则限制。</Description>
   <Resolution Name="Default">不要嵌套类型 {0}。或者，更改其可访问性，使它在外部不可见。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>将字符串规范化为大写</Name>
   <Description>字符串应规范化为大写。</Description>
   <Resolution Name="ToUpperInvariant">在方法 {0} 中，将对 {1} 的调用替换为 String.ToUpperInvariant()。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>参数名不应与成员名冲突</Name>
   <Description>参数名应有别于成员名。</Description>
   <Resolution Name="Default">更改成员名或参数名 {0}，使两者能相互区分。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>指定 CultureInfo</Name>
   <Description>如果存在一个采用 CultureInfo 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。CultureInfo 类型包含区域性特定的信息，这些信息是执行数字和字符串运算(如大小写转换、格式设置和字符串比较)所必需的。如果区域性之间的转换和分析行为应始终不变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>指定 IFormatProvider</Name>
   <Description>如果存在一个采用 IFormatProvider 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。运行时中的某些方法可以将值与字符串表示形式相互进行转换，并采用一个字符串参数。该参数中包含一个或多个称为格式说明符的字符，用于指示如何对值进行转换。如果格式说明符的含义因区域性而异，则格式设置对象提供在字符串表示形式中使用的实际字符。如果排序和比较行为不得因区域性而改变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="IFormatProviderAlternate">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果 {2} 的结果将基于用户的输入，请指定 {3} 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 {4}。</Resolution>
   <Resolution Name="IFormatProviderAlternateString">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请指定 {3} 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>指定 StringComparison</Name>
   <Description>如果存在采用 StringComparison 参数的重载，则始终先调用此重载，而不是那些不接受该参数的重载。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>静态容器类型不应具有构造函数</Name>
   <Description>不需要创建只定义静态成员的类型的实例。如果没有指定构造函数，许多编译器都会自动添加公共的默认构造函数。为了避免出现这种情况，可能需要添加一个空的私有构造函数。</Description>
   <Resolution Name="Default">由于类型 {0} 仅包含“static”(在 Visual Basic 中为“Shared”)成员，因此添加默认私有构造函数可阻止编译器添加默认公共构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>使用字符串长度测试是否有空字符串</Name>
   <Description>若要测试是否有空字符串，请检查 String.Length 是否等于零。对于如 "".Equals(someString) 和 String.Empty.Equals(someString) 之类的构造，其效率低于字符串长度测试。请使用 someString.Length == 0 检查来替换它们。</Description>
   <Resolution Name="IsNullOrEmpty">使用“String.IsNullOrEmpty”调用来替换 {1} 中的 {0} 调用。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>使用按顺序的 StringComparison</Name>
   <Description>对于非语义比较，应使用 StringComparison.Ordinal 或 StringComparison.OrdinalIgnoreCase，而不使用区分语义的 StringComparison.InvariantCulture。</Description>
   <Resolution Name="StringComparer">{0} 将“{1}”作为“StringComparer”参数传递给 {2}。若要执行非语义比较，请改为指定“StringComparer.Ordinal”或“StringComparer.OrdinalIgnoreCase”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>在适用处使用属性</Name>
   <Description>在大多数情况下，应使用属性而不是 Get/Set 方法。在下列情况下，方法比属性更可取: 第一，执行的是转换操作，操作开销大或具有显著的副作用；第二，执行的顺序很重要；第三，连续两次调用成员得到的结果不同；第四，静态成员却返回了可变的值；第五，成员返回了数组。</Description>
   <Resolution Name="Default">如果可行，请将 {0} 改为属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="为格式化方法提高正确的参数" Category="Microsoft.Usage" CheckId="CA2241">
   <Name>为格式化方法提高正确的参数</Name>
   <Description>为 String.Format 调用提供正确的参数数量。</Description>
   <Resolution Name="MissingArgument">方法 {0} 调用 {1} 并且不为格式项 {2} 提供参数。提供的格式字符串为:“{3}”</Resolution>
   <Resolution Name="MissingFormatItem">方法 {0} 调用 {1} 并且不为参数 {2} 提供格式项。提供的格式字符串为:“{3}”</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182361(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062">
   <Name>验证公共方法的参数</Name>
   <Description>应检查传递给外部可见方法的所有引用参数是否为 Null (在 VB 中为 Nothing)。如果适用，在参数为 null 时，引发 System.ArgumentNullException。</Description>
   <Resolution Name="Default">在外部可见方法 {0} 中，请在使用参数“{1}”之前先对其进行验证。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
